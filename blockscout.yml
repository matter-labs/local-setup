services:
  redis-db:
    image: 'redis:alpine'
    command: redis-server


  db:
    image: postgres:15
    shm_size: 256m
    restart: always
    command: postgres -c 'max_connections=200' -c 'client_connection_check_interval=60000'
    environment:
        POSTGRES_DB: 'blockscout'
        POSTGRES_USER: 'blockscout'
        POSTGRES_PASSWORD: 'ceWb1MeLBEeOIfk65gU8EjF8'
    ports:
      - target: 5432
        published: 7432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U blockscout -d blockscout"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  backend:
    depends_on:
      - db
      - redis-db
    image: blockscout/${DOCKER_REPO:-blockscout}:${DOCKER_TAG:-latest}
    restart: always
    stop_grace_period: 5m
    command: sh -c "bin/blockscout eval \"Elixir.Explorer.ReleaseTasks.create_and_migrate()\" && bin/blockscout start"
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    env_file:
      -  blockscout/common-blockscout.env
    links:
      - db:database
    environment:
        ETHEREUM_JSONRPC_VARIANT: 'geth'
  
  frontend:
    depends_on:
      - backend
    image: ghcr.io/blockscout/frontend:${FRONTEND_DOCKER_TAG:-latest}
    platform: linux/amd64
    restart: always
    env_file:
      -  blockscout/common-frontend.env

  stats:
    depends_on:
      - backend
    image: ghcr.io/blockscout/stats:${STATS_DOCKER_TAG:-latest}
    platform: linux/amd64
    restart: always
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    env_file:
      -  blockscout/common-stats.env
    environment:
      - STATS__DB_URL=postgresql://blockscout:ceWb1MeLBEeOIfk65gU8EjF8@db:5432/stats
      - STATS__BLOCKSCOUT_DB_URL=${STATS__BLOCKSCOUT_DB_URL:-postgresql://blockscout:ceWb1MeLBEeOIfk65gU8EjF8@db:5432/blockscout}
      - STATS__CREATE_DATABASE=true
      - STATS__RUN_MIGRATIONS=true

  proxy:
    depends_on:
      - backend
      - frontend
      - stats
    image: nginx
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    volumes:
      - "./blockscout/proxy:/etc/nginx/templates"
    environment:
      BACK_PROXY_PASS: ${BACK_PROXY_PASS:-http://backend:4000}
      FRONT_PROXY_PASS: ${FRONT_PROXY_PASS:-http://frontend:3000}
    ports:
      - target: 80
        published: 8099
      - target: 8080
        published: 8080
      - target: 8081
        published: 8081
